install.packages("installr")
library(installr)
updateR()
library(readxl)
install.packages("readxl")
library(readxl)
datos4 <- read_excel("datos_cafe_7rep_final.xlsx")
head(datos4)
trat1 = datos %>% filter(Hibrido == "Hibrido1") %>%
dplyr::select(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina)
library(tidyverse)
install.packages("tidyverse")
install.packages("mvnormtest")
trat1 = datos4 %>% filter(Hibrido == "Hibrido1") %>%
dplyr::select(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina)
library(tidyverse)
library(mvnormtest)
library(tidyverse)
library(mvnormtest)
trat1 = datos4 %>% filter(Hibrido == "Hibrido1") %>%
dplyr::select(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina)
trat2 = datos4 %>% filter(Hibrido == "Hibrido2") %>%
dplyr::select(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina)
trat3 = datos4 %>% filter(Hibrido == "Hibrido3") %>%
dplyr::select(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina)
trat4 = datos4 %>% filter(Hibrido == "Hibrido4") %>%
dplyr::select(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina)
trat5 = datos4 %>% filter(Hibrido == "Hibrido5") %>%
dplyr::select(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina)
trat6 = datos4 %>% filter(Hibrido == "Hibrido6") %>%
dplyr::select(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina)
trat7 = datos4 %>% filter(Hibrido == "Hibrido7") %>%
dplyr::select(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina)
mshapiro.test(t(trat1))
mshapiro.test(t(trat1))
mshapiro.test(t(trat1))
mshapiro.test(t(trat2))
mshapiro.test(t(trat3))
mshapiro.test(t(trat4))
mshapiro.test(t(trat5))
mshapiro.test(t(trat6))
mshapiro.test(t(trat7))
install.packages("heplots")
library(readxl)
datos4 <- read_excel("datos_cafe_7rep_final.xlsx")
head(datos4)
library(heplots)
X4 <-  datos4[c(2,3,4,5,6,7)]
datos4$Hibrido <- as.factor(datos4$Hibrido)
res4 <- boxM(X4, datos4$Hibrido);res4
library(heplots)
X4 <-  datos4[c(2,3,4,5,6,7)]
datos4$Hibrido <- as.factor(datos4$Hibrido)
res4 <- boxM(X4, datos4$Hibrido);res4
summary(res4)
heplots::boxM(cbind(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina) ~ Hibrido,
data = datos4)
install.packages("biotools")
library(biotools)
resultado4 <- boxM(X4, datos4$Hibrido);resultado4
library(biotools)
resultado4 <- boxM(X4, datos4$Hibrido);resultado4
library(covTestR)
install.packages("covTestR")
library(covTestR)
cafe <- unique(datos4$Hibrido)
cafe1 <- lapply(cafe,
function(x){as.matrix(datos4[datos4$Hibrido == x, 2:7])}
)
names(cafe1) <- cafe
Ahmad2017(cafe1)
## Prueba Wrapper
homogeneityCovariances(datos, group = Hibrido, covTest = BoxesM)
## Prueba Wrapper
homogeneityCovariances(datos4, group = Hibrido, covTest = BoxesM)
install.packages("DFA.CANCOR")
library(DFA.CANCOR)
HOMOGENEITY(data = datos4,
groups = 'Hibrido',
variables = c('rendimiento','altura_planta','diametro_fruto','largo_fruto','peso_grano',"contenido_cafeina"))
library(DFA.CANCOR)
HOMOGENEITY(data = datos4,
groups = 'Hibrido',
variables = c('rendimiento','altura_planta','diametro_fruto','largo_fruto','peso_grano',"contenido_cafeina"))
install.packages("psych")
library(psych)
options(scipen = 0)
cortest.bartlett(cor(datos4[, -1]),
n = nrow(datos4[, -1]))
install.packages("MVTests")
library(MVTests)
res41 = Bsper(datos[, -1])
library(MVTests)
res41 = Bsper(datos4[, -1])
summary(res41)
modelo4 = manova(cbind(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina) ~ Hibrido,
data = datos4)
Matrices4 = summary(modelo4)$SS
F = Matrices4$Hibrido
W = Matrices4$Residuals
Matrices4 = summary(modelo4)$SS
F = Matrices4$Hibrido
W = Matrices4$Residuals
F
W
T = F + W;T
Matrices4 = summary(modelo4)$SS
F = Matrices4$Hibrido
W = Matrices4$Residuals
F
W
T = F + W;T
eta2 = 1 - det(W)/det(T);eta2
eta2 = 1 - det(W)/det(T);eta2
det(F)/det(T)
k = 7 #numero de grupos
p = 6 #numero de variables
n = 7 #numero de observaciones por grupo
datosc1 = datos4
datosc1$Hibrido <- as.numeric(datosc1$Hibrido)
VMPG = matrix(NA, k, p) #vector de medias por grupo
for(i in 1:k){
VMPG[i,]=colMeans(datos4[datosc1$Hibrido == i, -1])
}
VMPG #cada fila es un vector de medias
#Computar B
(B=n*(k-1)*cov(VMPG))
# Tambien
n*(t(VMPG)-colMeans(VMPG))%*%t(t(VMPG)-colMeans(VMPG))
# Computar W
W = (n-1)*cov(datos[datosc1$Hibrido == 1, -1])
# Computar W
W = (n-1)*cov(datos4[datosc1$Hibrido == 1, -1])
for(i in 2:k){
W = W + (n-1)*cov(datos4[datosc1$Hibrido == 1, -1])
}
W
W+B
## autovalores de W^{-1}B
(lambdas = eigen(solve(W)%*%B)$values)
summary(modelo, test = "Pillai")
summary(modelo4, test = "Pillai")
det(W)/det(W + B)
summary.aov(modelo4)
modelo1 = manova(cbind(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina) ~ Hibrido,
data = datos,
subset = Hibrido %in% c("Hibrido1","Hibrido2"))
modelo1 = manova(cbind(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina) ~ Hibrido,
data = datos4,
subset = Hibrido %in% c("Hibrido1","Hibrido2"))
summary(modelo1,test="Pillai")
summary(modelo1,test="Wilks")
summary(modelo1,test="Hotelling-Lawley")
summary(modelo1,test="Roy")
summary.aov(modelo1)
Prueba <- c("Hibrido1", "Hibrido2", "Hibrido3", "Hibrido4", "Hibrido5", "Hibrido6","Hibrido7")
comb<-t(combn(length(Prueba) , 2))
for(i in 1:nrow(comb)){
modelo.comp = manova(cbind(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina) ~ Hibrido,
data=datos4,
subset = Hibrido %in% Prueba[comb[i,]])
print(paste("Prueba: ", Prueba[comb[i,]][1], "y", Prueba[comb[i,]][2]))
print(summary(modelo4.comp, test = "Pillai"))
cat("\n")
}
Prueba <- c("Hibrido1", "Hibrido2", "Hibrido3", "Hibrido4", "Hibrido5", "Hibrido6","Hibrido7")
comb<-t(combn(length(Prueba) , 2))
for(i in 1:nrow(comb)){
modelo.comp = manova(cbind(rendimiento, altura_planta, diametro_fruto, largo_fruto, peso_grano, contenido_cafeina) ~ Hibrido,
data=datos4,
subset = Hibrido %in% Prueba[comb[i,]])
print(paste("Prueba: ", Prueba[comb[i,]][1], "y", Prueba[comb[i,]][2]))
print(summary(modelo.comp, test = "Pillai"))
cat("\n")
}
install.packages("pacman")
library(pacman)
p_load(MASS,summarytools,nortest,mvnormtest)
library(pacman)
p_load(MASS,summarytools,nortest,mvnormtest)
head(datos)
install.packages("corrplot")
summary(datos)
library(tidyverse)
library(mvnormtest)   # mshapiro.test
library(biotools)     # BoxM / boxM
library(ICSNP)        # approx.hotelling.diff.test, HotellingsT2, T2.test
install.packages("ICSNP")
library(Hotelling)    # hotelling.test
install.packages("Hotelling")
library(Hotelling)    # hotelling.test
library(summarytools)
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
library(MASS)
library(ICSNP)
library(ergm)
install.packages("ergm")
library(rrcov)
install.packages("rrcov")
library(tidyverse)
library(mvnormtest)   # mshapiro.test
library(biotools)     # BoxM / boxM
library(ICSNP)        # approx.hotelling.diff.test, HotellingsT2, T2.test
library(Hotelling)    # hotelling.test
library(summarytools)
library(ggpubr)
library(MASS)
library(ICSNP)
library(ergm)
library(rrcov)
set.seed(777)
# Simulación
nA <- 28; nB <- 32
muA <- c(100, 140)
muB <- c(95, 150)
SigmaA <- matrix(c(225, 60,
60, 400), 2, 2, byrow=TRUE)
SigmaB <- matrix(c(196, 30,
30, 625), 2, 2, byrow=TRUE)
A <- mvrnorm(nA, muA, SigmaA)
B <- mvrnorm(nB, muB, SigmaB)
datos2 <- bind_rows(
tibble(Grupo="TratA", Glucosa=A[,1], Trigliceridos=A[,2]),
tibble(Grupo="TratB", Glucosa=B[,1], Trigliceridos=B[,2])
) %>% mutate(Grupo=factor(Grupo))
install.packages("network")
library(ICSNP)
install.packages("ICS")
ht2_welch <- approx.hotelling.diff.test(X3,
Y3, mu0=c(0,0),
assume.indep=TRUE, var.equal=FALSE)
approx.hotelling.diff.test(X3, Y3, mu0=c(5,-10),
assume.indep=TRUE, var.equal=FALSE)
library(tidyverse)
library(mvnormtest)   # mshapiro.test
library(biotools)     # BoxM / boxM
library(ICSNP)        # approx.hotelling.diff.test, HotellingsT2, T2.test
library(Hotelling)    # hotelling.test
library(summarytools)
library(ggpubr)
library(MASS)
library(ICSNP)
library(ergm)
library(rrcov)
set.seed(777)
# Simulación
nA <- 28; nB <- 32
muA <- c(100, 140)
muB <- c(95, 150)
SigmaA <- matrix(c(225, 60,
60, 400), 2, 2, byrow=TRUE)
SigmaB <- matrix(c(196, 30,
30, 625), 2, 2, byrow=TRUE)
A <- mvrnorm(nA, muA, SigmaA)
B <- mvrnorm(nB, muB, SigmaB)
datos2 <- bind_rows(
tibble(Grupo="TratA", Glucosa=A[,1], Trigliceridos=A[,2]),
tibble(Grupo="TratB", Glucosa=B[,1], Trigliceridos=B[,2])
) %>% mutate(Grupo=factor(Grupo))
library(tidyverse)
library(mvnormtest)   # mshapiro.test
library(biotools)     # BoxM / boxM
library(ICSNP)        # approx.hotelling.diff.test, HotellingsT2, T2.test
library(Hotelling)    # hotelling.test
library(summarytools)
library(ggpubr)
library(MASS)
library(ICSNP)
library(ergm)
library(rrcov)
set.seed(777)
# Simulación
nA <- 28; nB <- 32
muA <- c(100, 140)
muB <- c(95, 150)
SigmaA <- matrix(c(225, 60,
60, 400), 2, 2, byrow=TRUE)
SigmaB <- matrix(c(196, 30,
30, 625), 2, 2, byrow=TRUE)
A <- mvrnorm(nA, muA, SigmaA)
B <- mvrnorm(nB, muB, SigmaB)
datos2 <- bind_rows(
tibble(Grupo="TratA", Glucosa=A[,1], Trigliceridos=A[,2]),
tibble(Grupo="TratB", Glucosa=B[,1], Trigliceridos=B[,2])
) %>% mutate(Grupo=factor(Grupo))
X3 <- filter(datos2, Grupo=="TratA")[,2:3]
Y3 <- filter(datos2, Grupo=="TratB")[,2:3]
mshapiro.test(t(as.matrix(X3)))
mshapiro.test(t(as.matrix(Y3)))
results3 <- boxM(data=datos2[,2:3], group=datos2$Grupo)
summary(results3)
ht2_welch <- approx.hotelling.diff.test(X3,
Y3, mu0=c(0,0),
assume.indep=TRUE, var.equal=FALSE)
ht2_welch
approx.hotelling.diff.test(X3, Y3, mu0=c(5,-10),
assume.indep=TRUE, var.equal=FALSE)
T2.test(X3, Y3, mu=rep(0,2), method="c")
knitr::include_graphics("escudo agraria.jpg")
knitr::include_graphics("escudo agraria.jpg")
<p style="text-align: center;">
git init
